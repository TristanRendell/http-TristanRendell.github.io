<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>MakeItZone</title><link href="http://makeit.zone/" rel="alternate"></link><link href="http://makeit.zone/feeds/behind-the-scenes.atom.xml" rel="self"></link><id>http://makeit.zone/</id><updated>2016-03-27T00:00:00-07:00</updated><entry><title>Notes on This Website</title><link href="http://makeit.zone/notes-on-this-website.html" rel="alternate"></link><updated>2016-03-27T00:00:00-07:00</updated><author><name>MakeItZone</name></author><id>tag:makeit.zone,2016-03-27:notes-on-this-website.html</id><summary type="html">
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Wondering how this website has been put together? Or why certain things are as they are? Then this is the article for you!&lt;/p&gt;
&lt;p&gt;Like any project, it’s good to be clear on the: &lt;em&gt;what&lt;/em&gt;, &lt;em&gt;why&lt;/em&gt;, and &lt;em&gt;who&lt;/em&gt;. The &lt;em&gt;how&lt;/em&gt; is (usually) less important; that’s the journey (fun!) part, and likely to change as you go along.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What&lt;/strong&gt;: a business website, that also supports growing a community.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why&lt;/strong&gt;: to attract the target market and engage them in the sales process.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Who&lt;/strong&gt;: parents looking for &lt;span class="caps"&gt;STEAM&lt;/span&gt; related courses for their children, adults looking for &lt;span class="caps"&gt;STEAM&lt;/span&gt; corses for themselves, and people looking for fabrication services.&lt;/p&gt;
&lt;p&gt;And a couple of &lt;em&gt;hows&lt;/em&gt;: cheap hosting, and make the implementation (source code) available for people to learn from. These are less important.&lt;/p&gt;
&lt;p&gt;From there goals start to become clearer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;works on computers, tablets, and phones&lt;/li&gt;
&lt;li&gt;includes social networks (Facebook, Twitter)&lt;/li&gt;
&lt;li&gt;tidy, clear layout&lt;/li&gt;
&lt;li&gt;has ‘sales’ pages (more static), and ‘community’ pages (blog posts, project writeups, etc)&lt;/li&gt;
&lt;li&gt;use plain web technologoies rather than a turn-key service like &lt;a href="http://squarespace.com"&gt;SquareSpace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I don’t like “writing” in html. To many tags to take care of/get in the way. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="decisions"&gt;Decisions&lt;/h2&gt;
&lt;h3 id="hosting"&gt;Hosting&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com"&gt;GitHub&lt;/a&gt;. They provide free static file hosting, &lt;a href="http://webapps.stackexchange.com/questions/56898/am-i-allowed-to-host-a-commerical-website-on-github-pages"&gt;that’s ok to use for commercial purposes&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="frameworks"&gt;Frameworks&lt;/h3&gt;
&lt;p&gt;It’s a waste of time managing links between your own html files, manaully updating files with style changes, etc. Luckily there are several &lt;em&gt;static site generator&lt;/em&gt; tools that take care of this for you. Examples include &lt;a href="http://octopress.org"&gt;Octopress&lt;/a&gt; and &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt;. I choose the later because it has the plugins I wanted, and I like python.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; also supports &lt;a href="https://daringfireball.net/projects/markdown/"&gt;markdown&lt;/a&gt;- which is a great way of writing for the web (and other places too.)&lt;/p&gt;
&lt;p&gt;For layout (&lt;span class="caps"&gt;CSS&lt;/span&gt;), &lt;a href="http://getbootstrap.com/"&gt;bootstrap&lt;/a&gt; can be added. This provides responsive layouts that will reshape themselves based on the screen size.&lt;/p&gt;
&lt;h3 id="access-to-source-code"&gt;Access to Source Code&lt;/h3&gt;
&lt;p&gt;You can find the source code for this website on our &lt;a href="https://github.com/makeitzone"&gt;&lt;i class="fa fa-github-alt fa-md"&gt;&lt;/i&gt;Github page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Feel free to learn from or copy the &lt;em&gt;engine&lt;/em&gt; (the javascript, html, css, python,… ) powering this site. But please don’t just cut and copy the &lt;em&gt;content&lt;/em&gt; (text, pictures, videos, etc)- thanks!&lt;/p&gt;
&lt;h2 id="specific-tasks"&gt;Specific Tasks&lt;/h2&gt;
&lt;h3 id="parallax-and-other-animations"&gt;Parallax and Other Animations&lt;/h3&gt;
&lt;p&gt;I wanted some (simple) animation on the home page.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Parallax"&gt;Parallax&lt;/a&gt; is effective, and not to hard to understand. &lt;/p&gt;
&lt;p&gt;I started with this &lt;a href="http://untame.net/2013/04/how-to-integrate-simple-parallax-with-twitter-bootstrap/"&gt;Parallax with Jquery&lt;/a&gt; tutorial, and got that to work inside Pelican.&lt;/p&gt;
&lt;p&gt;But then I discovered &lt;a href="http://scrollmagic.io/"&gt;ScrollMagic&lt;/a&gt;. Read the tutorials on their GitHub page. They’re not complete, but there’s enough there, along with their examples, to figure it out pretty quickly.&lt;/p&gt;
&lt;h3 id="embedding-youtube"&gt;Embedding YouTube&lt;/h3&gt;
&lt;p&gt;Google makes it pretty easy: &lt;a href="https://developers.google.com/youtube/player_parameters#Overview"&gt;iFrame player&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Problems arise when you try and embed it in a responsive design- where the size of the box the video is in can change after the page is loaded.&lt;/p&gt;
&lt;p&gt;I found &lt;a href="https://css-tricks.com/NetMag/FluidWidthVideo/Article-FluidWidthVideo.php"&gt;this&lt;/a&gt; great article describing the problem, and a couple of solutions. I adapted the javascript solution. It needed some fixes (things change), and it worked really well… except when the window started small. I couldn’t quickly see how to trigger the javascript that calculates the aspect ratio after Bootstrap has completed re-arranging the columns.&lt;/p&gt;
&lt;p&gt;Then I discovered &lt;a href="http://getbootstrap.com/components/#responsive-embed"&gt;Bootstrap’s responsive embed&lt;/a&gt;. It’s not as technically refined (doesn’t handle non standard aspect ratios), but it works, and is really easy to use.&lt;/p&gt;
&lt;h3 id="embedding-google-calendar"&gt;Embedding Google Calendar&lt;/h3&gt;
&lt;p&gt;Just go to the settings of a Google calendar and you’ll find an option that will give you the html you need to embed it in your own web page.&lt;/p&gt;
&lt;p&gt;But it doesn’t play nice with responsive layouts (noticing a theme?)&lt;/p&gt;
&lt;p&gt;An easy fix is documented &lt;a href="https://thomas.vanhoutte.be/miniblog/make-google-calendar-iframe-responsive/comment-page-1/#comment-4132"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="embedding-a-twitter-timeline"&gt;Embedding a Twitter Timeline&lt;/h3&gt;
&lt;p&gt;It’s built in with Pelican/Pelican plugins.&lt;/p&gt;
&lt;p&gt;And the twitter widget is already responsive- horay! (Not surprising- Bootstrap is from Twitter!) &lt;span class="caps"&gt;BUT&lt;/span&gt; at the extreme, just before the columns re-arrange themselves, it ‘pops out’ of my sidebar.&lt;/p&gt;
&lt;p&gt;It’s only a little, but it’s noticeable.&lt;/p&gt;
&lt;p&gt;In this case, a really fast hack: add &lt;code&gt;overflow='scroll'&lt;/code&gt; to the containing div. The Twitter sidebar get’s slightly truncated at the extreme, but it’s still usable, and looks ok.&lt;/p&gt;
&lt;h3 id="embedding-a-facebook-page"&gt;Embedding a Facebook page&lt;/h3&gt;
&lt;p&gt;I’m not a big fan of Facebook- but that’s where a large section of our target market is.&lt;/p&gt;
&lt;p&gt;They make it very easy to include a &lt;a href="https://developers.facebook.com/docs/plugins/page-plugin"&gt;Facebook page plugin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But it’s explicitly not responsive(!)&lt;/p&gt;
&lt;p&gt;Attempt one at making it work in the sidebar lead to &lt;a href="http://www.praxis.net.au/blog/making-the-facebook-page-plugin-responsive/"&gt;this article&lt;/a&gt;. It clearly describes what has to be done, and provides example javascript code.&lt;/p&gt;
&lt;p&gt;As I understand things after reading that article and &lt;a href="https://developers.facebook.com/docs/reference/javascript/FB.XFBML.parse"&gt;parts of the Facebook javascript &lt;span class="caps"&gt;SDK&lt;/span&gt; docs&lt;/a&gt;, the layout is pre-calcuated server side. And you don’t get regular &lt;span class="caps"&gt;HTML&lt;/span&gt;, but a Facebook &lt;span class="caps"&gt;XML&lt;/span&gt; data blob that has to be rendered by a script running in the browser.&lt;/p&gt;
&lt;p&gt;And that didn’t work for me; I kept getting errors related to &lt;a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing"&gt;&lt;span class="caps"&gt;CORS&lt;/span&gt;&lt;/a&gt;.  When the script I copied above from tried to reload the data from Facebook it was blocked. It may work if not hosted on &lt;code&gt;localhost&lt;/code&gt;- but I couldn’t find any concrete confirmation of this. &lt;/p&gt;
&lt;p&gt;But how does it work when the page is first loaded? My guess is that the Facebook javascript &lt;span class="caps"&gt;API&lt;/span&gt; loads and renders the data when it is loaded. The &lt;span class="caps"&gt;SDK&lt;/span&gt; code is being loaded from facebook.com, and &lt;span class="caps"&gt;CORS&lt;/span&gt; is setup so that it works. As soon as I call the Facebook &lt;span class="caps"&gt;SDK&lt;/span&gt; from my script, the origin is set as &lt;code&gt;localhost&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I tried turning off &lt;span class="caps"&gt;CORS&lt;/span&gt; in my browser, and that really blew up. Turns out this was used to &lt;a href="https://en.wikipedia.org/wiki/Self-XSS"&gt;hack peoples accounts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Attempt 2: I need to cause the data to be reloaded, but the script doing it has to be from an approved domain. And I don’t want to be limited where my site is hosted for testing or deployment.&lt;/p&gt;
&lt;p&gt;Solution: Create a small wrapper html page that just contains the Facebook page plugin. Embed that in an &lt;code&gt;iframe&lt;/code&gt;. Forcing the &lt;code&gt;iframe&lt;/code&gt; to reload it’s source after the page is resized causes the Facebook &lt;span class="caps"&gt;SDK&lt;/span&gt; to be reloaded- re-rendering the page plugin. Here’s how to &lt;a href="http://stackoverflow.com/questions/86428/whats-the-best-way-to-reload-refresh-an-iframe-using-javascript"&gt;reload an iframe&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It’s wasteful and annoying- but it works. Hopefully browser caching makes it a little less horrible.&lt;/p&gt;
&lt;h3 id="collecting-feedback-userreport"&gt;Collecting Feedback - UserReport&lt;/h3&gt;
&lt;p&gt;I wanted to make it easy for people to give feedback- corrections, ideas, whatever.&lt;/p&gt;
&lt;p&gt;I found &lt;a href="https://www.userreport.com"&gt;UserReport&lt;/a&gt;. It’s free and easy to setup.&lt;/p&gt;
&lt;p&gt;The only problem I had was figuring out how to adjust the location of the pop-up button; it defaults to vertically centered, on the left; right in the article text. I started going down the route of &lt;a href="https://userreport.zendesk.com/hc/en-us/articles/202514568-Custom-Feedback-Forum-buttons-and-links"&gt;creating a custom feedback control&lt;/a&gt;… and then discovered &lt;a href="https://userreport.zendesk.com/hc/en-us/articles/202510928-Change-position-of-Feedback-button"&gt;you can change the position of the feeback button&lt;/a&gt;. I wish all the feeedback button related options where in one place, rather than in two.&lt;/p&gt;
&lt;h3 id="live-messaging"&gt;Live Messaging&lt;/h3&gt;
&lt;p&gt;People like immediate feedback. We can remove a step (clicking and launching an email, waiting for a response) by adding live messaging to the site.&lt;/p&gt;
&lt;p&gt;The Facebook page plugin already includes this for Facebook messenger. The Twitter plugin sort-of does as well.&lt;/p&gt;
&lt;p&gt;But both of these don’t make direct communication the main &lt;em&gt;call to action&lt;/em&gt;. They really want you to look at the content they have and go to their websites.&lt;/p&gt;
&lt;p&gt;I added a direct &lt;em&gt;“talk to me”&lt;/em&gt; call to action at the bottom of the page via &lt;a href="https://smooch.io/"&gt;smooch&lt;/a&gt;. They have a very reasonable free tier, and it was trivial to integrate. I’ve hooked it up to &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt;. And if no one responds, then the viewer has the option of leaving their email for later follow up. &lt;a href="https://smooch.io/"&gt;Smooch&lt;/a&gt; can also be hooked up to &lt;span class="caps"&gt;SMS&lt;/span&gt; and voice calls, eg via &lt;a href="https://www.twilio.com"&gt;Twilio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The only down-side was how the integration works in &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt;: each incoming customer chat creates it’s own chat room in &lt;a href="https://slack.com/"&gt;slack&lt;/a&gt;. It makes sense, but it means &lt;a href="https://smooch.io/"&gt;Smooch&lt;/a&gt; has to have pretty wide access and control of your &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt; team. My solution: create a new &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt; team specifically for use with &lt;a href="https://smooch.io/"&gt;Smooch&lt;/a&gt;. This leaves the original &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt; team ‘safer’ for community use.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;Here’s a list of pages I found helpful.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com"&gt;Pelican docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;Pelican plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/29691258/how-do-i-use-more-than-one-pelican-theme-simultaneously"&gt;using more than one Pelican theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pirsquared.org/blog/pelican-tags-vs-categories.html"&gt;tags vs categories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DandyDev/pelican-bootstrap3"&gt;Pelican bootstrap theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fontawesome.io/icons/"&gt;Fontawesome icon search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://getbootstrap.com/css"&gt;Bootstrap &lt;span class="caps"&gt;CSS&lt;/span&gt; docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jinja.pocoo.org/docs/dev/templates"&gt;Jinja template engine docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.w3schools.com/jquery/jquery_ref_selectors.asp"&gt;jQuery selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bootstrapbay.com/blog/bootstrap-tutorial-navbar/"&gt;Bootstrap Navbar tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="web"></category><category term="business"></category></entry></feed>